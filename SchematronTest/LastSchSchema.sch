<?xml version="1.0" encoding="utf-8"?>
<sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <!-- Generated by eXolutio on 20.3.2012 22:54 from Hierarchy2/PSMSchema 1. -->
  <!--Below follow constraints from OCL script 'defaultname'. -->
  <sch:pattern id="Company">
    <sch:rule context="/company">
      <!--self.departments.department->closure(c : Department | c.subdepartments.department)->forAll(d : Set(Department) | d->collect(d : Department | d.subdepartments)->collect(s : Subdepartments | s.department)->size() < 5)-->
      <sch:assert test="oclX:forAll(oclX:closure(departments/department, function($c) { $c/subdepartments/department }), function($d) { count(oclX:collect(oclX:collect($d, function($d) { $d/subdepartments }), function($s) { $s/department })) lt 5 })" />
      <!--self.departments.department->closure(c : Department | c.subdepartments.department)->size() < 30-->
      <sch:assert test="count(oclX:closure(departments/department, function($c) { $c/subdepartments/department })) lt 30" />
    </sch:rule>
  </sch:pattern>
  <sch:pattern id="Department">
    <sch:rule context="/company/departments/department" />
  </sch:pattern>
  <sch:pattern id="Employee" abstract="true">
    <sch:rule context="$e">
      <!--e.id > 0-->
      <sch:assert test="id gt 0" />
    </sch:rule>
  </sch:pattern>
  <!--instance pattern for PSMClass: "Employee"'s-->
  <sch:pattern id="Employee-as-Employee" is-a="Employee">
    <sch:param e="." />
  </sch:pattern>
  <sch:pattern id="Manager">
    <sch:rule context="/company/departments/department/manager">
      <context-variable name="m" xmlns="http://eXolutio.com/oclX" />
      <!--m.Department.employees.employee->includes(m)-->
      <sch:assert test="oclX:includes(../employees/employee, .)" />
    </sch:rule>
  </sch:pattern>
  <!--instance pattern for PSMClass: "Manager"'s ancestor Employee-->
  <sch:pattern id="Manager-as-Employee" is-a="Employee">
    <sch:param e="." />
  </sch:pattern>
</sch:schema>