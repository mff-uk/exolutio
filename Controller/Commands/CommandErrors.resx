<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CMDERR_COMMAND_NUMBER_ALTERED" xml:space="preserve">
    <value>CommandNumber should be assigned only once.</value>
  </data>
  <data name="COMMAND_CANT_EXECUTE" xml:space="preserve">
    <value>Command cannot be executed.</value>
  </data>
  <data name="CMDERR_MANDATORY_ARGUMENT_NOT_INITIALIZED_2" xml:space="preserve">
    <value>Command "{0}" was not correctly initialized, field "{1}" must be defined before execution.</value>
  </data>
  <data name="CMDERR_STACK_INCONSISTENT" xml:space="preserve">
    <value>Error in command stack consistency.</value>
  </data>
  <data name="CMDERR_RESULT_ARGUMENT_NULL" xml:space="preserve">
    <value>Result attribute "{0}" was not set during execution of the command {1}.</value>
  </data>
  <data name="CMDERR_INPUT_TYPE_MISMATCH" xml:space="preserve">
    <value>Type mismatch in CanExecute()</value>
  </data>
  <data name="CMDERR_CONTENT_MODEL_NOT_EMPTY" xml:space="preserve">
    <value>Content model still has child associations.</value>
  </data>
  <data name="CMDERR_CLASS_HAS_ASSOCIATIONS" xml:space="preserve">
    <value>Deleted class still has associations.</value>
  </data>
  <data name="CMDERR_CLASS_HAS_ATTRIBUTES" xml:space="preserve">
    <value>Deleted class still has attributes.</value>
  </data>
  <data name="CMDERR_NO_COMMON_ASSOCIATION" xml:space="preserve">
    <value>The source and the target class are not connected by an association.</value>
  </data>
  <data name="CMDERR_SYNCHRO_PIM_ASSOC_NOT_SUBSET" xml:space="preserve">
    <value>One of the synchronized sets of associations is not a subset of associations between the two PIM classes connected by some of the associations</value>
  </data>
  <data name="CMDERR_NO_COMMON_ASSOCIATION_OR_REPR" xml:space="preserve">
    <value>The source and the target association members are not connected by an association, neither is one a structural representant of the other.</value>
  </data>
  <data name="CMDERR_CLASS_IS_REPRESENTED" xml:space="preserve">
    <value>The PSM class has some representants.</value>
  </data>
  <data name="CMDERR_CYCLIC_REPR" xml:space="preserve">
    <value>Cyclic representation would occur.</value>
  </data>
  <data name="CMDERR_NOT_SAME_INTERPRETATION" xml:space="preserve">
    <value>The two classes do not have the same interpretation.</value>
  </data>
  <data name="CMDERR_REPRESENTED_CANNOT_BE_SCHEMACLASS" xml:space="preserve">
    <value>Represented class cannot be a PSM schema class.</value>
  </data>
  <data name="CMDERR_SCHEMACLASS_CANNOT_BE_INTERPRETED" xml:space="preserve">
    <value>PSM schema class cannot have interpretation.</value>
  </data>
  <data name="CMDERR_UNINTERPRETED_SUBCLASS_ASSOCIATIONS_INTERPRETED" xml:space="preserve">
    <value>Some parent PSM associations of uninterpreted subclasses of the PSM component have interpretation.</value>
  </data>
  <data name="CMDERR_UNINTERPRETED_SUBCLASS_ATTRIBUTES_INTERPRETED" xml:space="preserve">
    <value>Some PSM attributes within uninterpreted subclasses of the PSM component have interpretation.</value>
  </data>
  <data name="CMDERR_CANNOT_SET_INTERPRETATION_CHILD_NOT_CLASS" xml:space="preserve">
    <value>Cannot set interpretation for a PSM association, whose child is not a PSM class.</value>
  </data>
  <data name="CMDERR_CANNOT_SET_INTERPRETATION_CLASSES_DONT_MATCH" xml:space="preserve">
    <value>Cannot set interpretation for this PSM attribute. The PIM class of the suggested PIM attribute is not the same as the PIMClass which is an interpretation of the PSM attribute's context class. It is not its more general class either.</value>
  </data>
  <data name="CMDERR_CANNOT_SET_INTERPRETATION_NO_INTCLASS" xml:space="preserve">
    <value>Cannot set interpretation for this PSM component. It does not belong to any interpreted PSM classes context.</value>
  </data>
  <data name="CMDERR_CANNOT_SYNCHRO_ATTS_DIFFERENT_CLASSES" xml:space="preserve">
    <value>Cannot synchronize attributes from different classes.</value>
  </data>
  <data name="CMDERR_CANNOT_SYNCHRO_EMPTY_SETS" xml:space="preserve">
    <value>Cannot synchronize empty sets.</value>
  </data>
  <data name="CMDERR_NO_COMMON_INTERPRETED_ASSOCIATION" xml:space="preserve">
    <value>The source and the target PSM classes' interpretations are not connected by the suggested association.</value>
  </data>
  <data name="CMDERR_ROOTS_PRESENT" xml:space="preserve">
    <value>Some roots still present.</value>
  </data>
  <data name="CMDERR_NO_COMMON_ANCESTOR_CLASS" xml:space="preserve">
    <value>There is no common ancestor class.</value>
  </data>
  <data name="CMDERR_PARENT_ASSOCIATION_EXISTS" xml:space="preserve">
    <value>Cannot create association. The child already has a parent association.</value>
  </data>
  <data name="CMDERR_NO_COMMON_ANCESTOR_ASSOC_MEMBER" xml:space="preserve">
    <value>There is no common ancestor association member.</value>
  </data>
  <data name="CMDERR_CANNOT_SYNCHRO_PSM_ASSOC" xml:space="preserve">
    <value>PSM associations can be synchronized only if they all contain the same PSM class and their other PSM classes all have the same interpretation</value>
  </data>
  <data name="CMDERR_CONTENT_MODEL_NOT_ROOT" xml:space="preserve">
    <value>Content model is not a root.</value>
  </data>
  <data name="CMDERR_CLASS_NOT_ROOT" xml:space="preserve">
    <value>Class is not root.</value>
  </data>
  <data name="CMDERR_CM_NOT_ROOT" xml:space="preserve">
    <value>Content model is not root.</value>
  </data>
  <data name="CMDERR_REPR_DIFFERENT_CONTEXT" xml:space="preserve">
    <value>Represented class has different interpreted context than representant class</value>
  </data>
  <data name="CMDERR_CANNOT_SET_INTERPRETATION_CMDERR_CANNOT_SET_INTERPRETATION_CHILD_NOT_INTERPRETED" xml:space="preserve">
    <value>Cannot set interpretation. Child is not interpreted.</value>
  </data>
  <data name="CMDERR_NO_MULTIPLE_INHERITANCE" xml:space="preserve">
    <value>The specific class already has a general class. Multiple inheritance is not allowed.</value>
  </data>
  <data name="CMDERR_CYCLIC_INHERITANCE" xml:space="preserve">
    <value>The generalization relations cannot form a cycle.</value>
  </data>
  <data name="CMDERR_NO_SELF_INHERITANCE" xml:space="preserve">
    <value>The general class must be different from the specific class.</value>
  </data>
  <data name="CMDERR_GENERAL_IS_FINAL" xml:space="preserve">
    <value>Cannot make class a general class because it is final.</value>
  </data>
  <data name="COMMAND_CANT_EXECUTE_PROPAGATION" xml:space="preserve">
    <value>Unexpected error: Propagation command could not be executed. Model now may be broken. Do not save the project and restart eXolutio.</value>
  </data>
  <data name="COMMAND_CANT_EXECUTE_UNEXPECTED" xml:space="preserve">
    <value>Unexpected error: Command could not be executed. Model now may be broken. Do not save the project and restart eXolutio.</value>
  </data>
  <data name="CMDERR_INVALID_SPECIALIZATION" xml:space="preserve">
    <value>The special class is not a direct child of the general class.</value>
  </data>
  <data name="CMDERR_NO_GENERALIZATION" xml:space="preserve">
    <value>There is no general class.</value>
  </data>
</root>