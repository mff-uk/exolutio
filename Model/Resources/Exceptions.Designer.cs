//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Exolutio.Model.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Exceptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Exceptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Exolutio.Model.Resources.Exceptions", typeof(Exceptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found object is of type {0} expected type {1}..
        /// </summary>
        internal static string ComponentMappingDictionary_GetComponent_Found_object_is_of_type__0__expected_type__1__ {
            get {
                return ResourceManager.GetString("ComponentMappingDictionary_GetComponent_Found_object_is_of_type__0__expected_type" +
                        "__1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lookup for component of type &apos;{0}&apos; failed, key &apos;{1}&apos; not found in the component dictionary..
        /// </summary>
        internal static string Lookup_for_component_of_type___0___failed__key___1___not_found_in_the_component_dictionary_ {
            get {
                return ResourceManager.GetString("Lookup_for_component_of_type___0___failed__key___1___not_found_in_the_component_d" +
                        "ictionary_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not access ProjectVersions when UsesVersioning is set to false.
        /// </summary>
        internal static string Project_ProjectVersions_Can_not_access_ProjectVersions_when_UsesVersioning_is_set_to_false {
            get {
                return ResourceManager.GetString("Project_ProjectVersions_Can_not_access_ProjectVersions_when_UsesVersioning_is_set" +
                        "_to_false", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not access SingleVersion when UsesVersioning is set to true.
        /// </summary>
        internal static string Project_SingleVersion_Can_not_access_SingleVersion_when_UsesVersioning_is_set_to_true {
            get {
                return ResourceManager.GetString("Project_SingleVersion_Can_not_access_SingleVersion_when_UsesVersioning_is_set_to_" +
                        "true", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to itemOldVersion.Version must point to the same object as oldVersion.
        /// </summary>
        internal static string VersionManager_RegisterVersionLink_itemOldVersion_Version_must_point_to_the_same_object_as_oldVersion {
            get {
                return ResourceManager.GetString("VersionManager_RegisterVersionLink_itemOldVersion_Version_must_point_to_the_same_" +
                        "object_as_oldVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pivot for item not found.
        /// </summary>
        internal static string VersionManager_RegisterVersionLink_Pivot_for_item_not_found {
            get {
                return ResourceManager.GetString("VersionManager_RegisterVersionLink_Pivot_for_item_not_found", resourceCulture);
            }
        }
    }
}
