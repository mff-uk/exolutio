<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
  <!-- Template generated by eXolutio on 31.7.2011 18:57 
       from D:\Programování\EvoXSVN\XSLTTest\ElementGroups\elementgroups.eXo. -->
  <xsl:output method="xml" indent="yes" />
  <!--PSMClass: "Purchase"-->
  <xsl:template match="/purchase">
    <purchase>
      <xsl:call-template name="TOP-Purchase-ATT">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
      <xsl:call-template name="TOP-Purchase-ELM">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
    </purchase>
  </xsl:template>
  <!--End of: PSMClass: "Purchase"-->
  <xsl:template name="TOP-Purchase-ATT">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'purchase-date']" />
    <xsl:for-each-group select="$ci[name() = 'subcode'] | $ci[name() = 'code'] | $ci[name() = 'weight'] | $ci[name() = 'title'] | $ci[name() = 'amount'] | $ci[name() = 'unit-price']" group-starting-with="code">
      <xsl:call-template name="TOP-Purchase-Item-ATT">
        <xsl:with-param name="ci" select="current-group()" />
      </xsl:call-template>
    </xsl:for-each-group>
  </xsl:template>
  <xsl:template name="TOP-Purchase-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:for-each-group select="$ci[name() = 'subcode'] | $ci[name() = 'code'] | $ci[name() = 'weight'] | $ci[name() = 'title'] | $ci[name() = 'amount'] | $ci[name() = 'unit-price']" group-starting-with="code">
      <xsl:call-template name="TOP-Purchase-Item-ELM">
        <xsl:with-param name="ci" select="current-group()" />
      </xsl:call-template>
    </xsl:for-each-group>
    <xsl:call-template name="TOP-Purchase-CustomerInfo-ELM">
      <xsl:with-param name="ci" select="$ci[name() = 'city'] | $ci[name() = 'zip'] | $ci[name() = 'street'] | $ci[name() = 'customer-no'] | $ci[name() = 'email']" />
    </xsl:call-template>
  </xsl:template>
  <xsl:template name="TOP-Purchase-Item-ATT">
    <xsl:param name="ci" as="item()*" />
    <xsl:call-template name="TOP-Purchase-Item-ItemI-ATT">
      <xsl:with-param name="ci" select="$ci[name() = 'amount'] | $ci[name() = 'unit-price']" />
    </xsl:call-template>
  </xsl:template>
  <xsl:template name="TOP-Purchase-Item-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:call-template name="TOP-Purchase-Item-Product-ELM">
      <xsl:with-param name="ci" select="$ci[name() = 'subcode'] | $ci[name() = 'code'] | $ci[name() = 'weight'] | $ci[name() = 'title']" />
    </xsl:call-template>
    <xsl:call-template name="TOP-Purchase-Item-ItemI-ELM">
      <xsl:with-param name="ci" select="$ci[name() = 'amount'] | $ci[name() = 'unit-price']" />
    </xsl:call-template>
  </xsl:template>
  <xsl:template name="TOP-Purchase-CustomerInfo-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:call-template name="TOP-Purchase-CustomerInfo-Address-ELM">
      <xsl:with-param name="ci" select="$ci[name() = 'city'] | $ci[name() = 'zip'] | $ci[name() = 'street']" />
    </xsl:call-template>
    <xsl:apply-templates select="$ci[name() = 'customer-no'] | $ci[name() = 'email']" />
  </xsl:template>
  <xsl:template name="TOP-Purchase-Item-Product-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'subcode']" />
    <xsl:apply-templates select="$ci[name() = 'code']" />
    <xsl:apply-templates select="$ci[name() = 'weight']" />
    <xsl:apply-templates select="$ci[name() = 'title']" />
  </xsl:template>
  <xsl:template name="TOP-Purchase-Item-ItemI-ATT">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'amount']" />
  </xsl:template>
  <xsl:template name="TOP-Purchase-Item-ItemI-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'unit-price']" />
  </xsl:template>
  <xsl:template name="TOP-Purchase-CustomerInfo-Address-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'city']" />
    <xsl:apply-templates select="$ci[name() = 'zip']" />
    <xsl:apply-templates select="$ci[name() = 'street']" />
  </xsl:template>
  <!--PSMAttribute: "ItemI.amountr" 1..1-->
  <xsl:template match="/purchase/amount">
    <xsl:attribute name="amountr">
      <xsl:value-of select="." />
    </xsl:attribute>
  </xsl:template>
  <!--End of: PSMAttribute: "ItemI.amountr" 1..1-->
  <!--No blue nodes-->
  <!--Green nodes template-->
  <xsl:template match="@purchase-date | customer-no | email | city | zip | street | subcode | code | weight | title | unit-price" priority="0">
    <xsl:copy-of select="." />
  </xsl:template>
</xsl:stylesheet>