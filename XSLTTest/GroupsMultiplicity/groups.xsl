<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
  <!-- Template generated by eXolutio on 31.7.2011 14:31 
    from D:\Programování\EvoXSVN\XSLTTest\GroupsMultiplicity\groupsMultiplicity.eXo. -->
  <xsl:output method="xml" indent="yes" />
  <!--PSMClass: "Purchase"-->
  <xsl:template match="/purchase-request">
    <purchase-request>
      <xsl:call-template name="TOP-Purchase-ATT">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
      <xsl:call-template name="TOP-Purchase-ELM">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
    </purchase-request>
  </xsl:template>
  <!--End of: PSMClass: "Purchase"-->
  <xsl:template name="TOP-Purchase-ATT">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'purchase-date']" />
  </xsl:template>
  <xsl:template name="TOP-Purchase-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'customer-info']" />
    <xsl:for-each-group select="$ci[name() = 'emp-no']" group-starting-with="@emp-no">
      <xsl:call-template name="TOP-Purchase-SalesAssistant-ELM">
        <xsl:with-param name="ci" select="current-group()" />
      </xsl:call-template>
    </xsl:for-each-group>
    <xsl:call-template name="TOP-Purchase-Items" />
  </xsl:template>
  <!--PSMClass: "CustomerInfo"-->
  <xsl:template match="/purchase-request/customer-info">
    <customer-info>
      <xsl:call-template name="TOP-Purchase-CustomerInfo-ELM">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
    </customer-info>
  </xsl:template>
  <!--End of: PSMClass: "CustomerInfo"-->
  <xsl:template name="TOP-Purchase-CustomerInfo-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'customer']" />
  </xsl:template>
  <xsl:template name="TOP-Purchase-SalesAssistant-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'emp-no']" />
    <xsl:call-template name="TOP-Purchase-SalesAssistant-emp-no-IG">
      <xsl:with-param name="count" select="1 - count($ci[name() = 'emp-no'])" />
    </xsl:call-template>
    <xsl:call-template name="TOP-Purchase-SalesAssistant-name-IG" />
  </xsl:template>
  <!--PSMClass: "Items"-->
  <xsl:template name="TOP-Purchase-Items">
    <items>
      <xsl:call-template name="TOP-Purchase-Items-ELM" />
    </items>
  </xsl:template>
  <!--End of: PSMClass: "Items"-->
  <xsl:template name="TOP-Purchase-Items-ELM">
    <xsl:apply-templates select="product | item-info[position() le 5]" />
    <xsl:call-template name="TOP-Purchase-Items-Item-ELM-IG">
      <xsl:with-param name="count" select="4 - count(.)" />
    </xsl:call-template>
  </xsl:template>
  <!--PSMClass: "Customer"-->
  <xsl:template match="/purchase-request/customer-info/customer">
    <customer>
      <xsl:call-template name="TOP-Purchase-CustomerInfo-Customer-ATT">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
      <xsl:call-template name="TOP-Purchase-CustomerInfo-Customer-ELM">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
    </customer>
  </xsl:template>
  <!--End of: PSMClass: "Customer"-->
  <xsl:template name="TOP-Purchase-CustomerInfo-Customer-ATT">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'customer-no']" />
  </xsl:template>
  <xsl:template name="TOP-Purchase-CustomerInfo-Customer-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:for-each-group select="../postcode | ../city | ../street" group-starting-with="postcode">
      <xsl:call-template name="TOP-Purchase-CustomerInfo-Customer-Address">
        <xsl:with-param name="ci" select="current-group()" />
      </xsl:call-template>
    </xsl:for-each-group>
    <xsl:call-template name="TOP-Purchase-CustomerInfo-Customer-Address-ELM-IG">
      <xsl:with-param name="count" select="1 - count(../postcode)" />
    </xsl:call-template>
    <xsl:call-template name="TOP-Purchase-CustomerInfo-Customer-CustEmail-ELM">
      <xsl:with-param name="ci" select="$ci[name() = 'email']"/>
    </xsl:call-template>
  </xsl:template>
  <!--PSMClass: "Address"-->
  <xsl:template name="TOP-Purchase-CustomerInfo-Customer-Address">
    <xsl:param name="ci" as="item()*" />
    <delivery-address>
      <xsl:call-template name="TOP-Purchase-CustomerInfo-Customer-Address-ELM">
        <xsl:with-param name="ci" select="$ci" />
      </xsl:call-template>
    </delivery-address>
  </xsl:template>
  <!--End of: PSMClass: "Address"-->
  <xsl:template name="TOP-Purchase-CustomerInfo-Customer-Address-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'postcode']" />
    <xsl:apply-templates select="$ci[name() = 'city']" />
    <xsl:apply-templates select="$ci[name() = 'street']" />
  </xsl:template>
  <xsl:template name="TOP-Purchase-CustomerInfo-Customer-CustEmail-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'email'][position() le 5]" />
    <xsl:call-template name="TOP-Purchase-CustomerInfo-Customer-CustEmail-email-IG">
      <xsl:with-param name="count" select="3 - count($ci[name() = 'email'])" />
    </xsl:call-template>
  </xsl:template>
  <!--PSMClass: "Product"-->
  <xsl:template match="/purchase-request/product">
    <product>
      <xsl:call-template name="TOP-Purchase-Items-Item-Product-ATT">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
    </product>
  </xsl:template>
  <!--End of: PSMClass: "Product"-->
  <xsl:template name="TOP-Purchase-Items-Item-Product-ATT">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'code']" />
    <xsl:apply-templates select="$ci[name() = 'subcode']" />
    <xsl:apply-templates select="$ci[name() = 'title']" />
  </xsl:template>
  <!--PSMClass: "ItemI"-->
  <xsl:template match="/purchase-request/item-info">
    <item-info>
      <xsl:call-template name="TOP-Purchase-Items-Item-ItemI-ATT">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
      <xsl:call-template name="TOP-Purchase-Items-Item-ItemI-ELM">
        <xsl:with-param name="ci" select="./(* | @*)" />
      </xsl:call-template>
    </item-info>
  </xsl:template>
  <!--End of: PSMClass: "ItemI"-->
  <xsl:template name="TOP-Purchase-Items-Item-ItemI-ATT">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'amount']" />
  </xsl:template>
  <xsl:template name="TOP-Purchase-Items-Item-ItemI-ELM">
    <xsl:param name="ci" as="item()*" />
    <xsl:apply-templates select="$ci[name() = 'unit-price']" />
  </xsl:template>
  <!-- Instance generators -->
  <xsl:template name="TOP-Purchase-SalesAssistant-emp-no-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <emp-no>emp-no<xsl:value-of select="current()" /></emp-no>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-SalesAssistant-name-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <name>name<xsl:value-of select="current()" /></name>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-CustomerInfo-Customer-Address-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <delivery-address>
        <xsl:call-template name="TOP-Purchase-CustomerInfo-Customer-Address-ELM-IG" />
      </delivery-address>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-CustomerInfo-Customer-Address-ELM-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <postcode>postcode</postcode>
      <city>city</city>
      <street>street</street>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-CustomerInfo-Customer-CustEmail-email-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <email>email<xsl:value-of select="current()" /></email>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-Items-Item-ELM-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <xsl:call-template name="TOP-Purchase-Items-Item-Product-IG" />
      <xsl:call-template name="TOP-Purchase-Items-Item-ItemI-IG" />
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-Items-Item-Product-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <product>
        <xsl:call-template name="TOP-Purchase-Items-Item-Product-ATT-IG" />
      </product>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-Items-Item-Product-ATT-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <xsl:attribute name="code">code</xsl:attribute>
      <xsl:attribute name="subcode">subcode</xsl:attribute>
      <xsl:attribute name="title">title</xsl:attribute>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-Items-Item-ItemI-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <item-info>
        <xsl:call-template name="TOP-Purchase-Items-Item-ItemI-ATT-IG" />
        <xsl:call-template name="TOP-Purchase-Items-Item-ItemI-ELM-IG" />
      </item-info>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-Items-Item-ItemI-ATT-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <xsl:attribute name="amount">amount</xsl:attribute>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="TOP-Purchase-Items-Item-ItemI-ELM-IG">
    <xsl:param name="count" as="item()" select="1" />
    <xsl:for-each select="1 to $count">
      <unit-price>unit-price</unit-price>
    </xsl:for-each>
  </xsl:template>
  <!--Element to attribute conversion template-->
  <xsl:template match="title | amount" priority="0">
    <xsl:attribute name="{name()}">
      <xsl:value-of select="." />
    </xsl:attribute>
  </xsl:template>
  <!--Attribute to element conversion template-->
  <xsl:template match="@emp-no" priority="0">
    <xsl:element name="{name()}">
      <xsl:value-of select="." />
    </xsl:element>
  </xsl:template>
  <!--No blue nodes-->
  <!--Green nodes template-->
  <xsl:template match="@purchase-date | @customer-no | postcode | city | street | @code | @subcode | unit-price | email" priority="0">
    <xsl:copy-of select="." />
  </xsl:template>
</xsl:stylesheet>